// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open Ast


# 12 "obj\x86\Release\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | COMMA
  | APOS
  | LPAREN
  | RPAREN
  | IF
  | AMP
  | PIPE
  | AND
  | OR
  | COUNT
  | FOR
  | INCR
  | VAR
  | OPEN
  | HIGH
  | LOW
  | CLOSE
  | VOLUME
  | SYMBOL
  | DATE
  | POW
  | ASTER
  | SLASH
  | SQRT
  | LOG
  | MOD
  | MAX
  | MIN
  | SMA
  | ABS
  | STD
  | PLUS
  | MINUS
  | GT
  | GE
  | EQ
  | LT
  | LE
  | NE
  | PARSEREXCEPTION of (string)
  | LEXEREXCEPTION of (string)
  | TEXT of (string)
  | FLOAT of (System.Double)
  | INT32 of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_COMMA
    | TOKEN_APOS
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_IF
    | TOKEN_AMP
    | TOKEN_PIPE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_COUNT
    | TOKEN_FOR
    | TOKEN_INCR
    | TOKEN_VAR
    | TOKEN_OPEN
    | TOKEN_HIGH
    | TOKEN_LOW
    | TOKEN_CLOSE
    | TOKEN_VOLUME
    | TOKEN_SYMBOL
    | TOKEN_DATE
    | TOKEN_POW
    | TOKEN_ASTER
    | TOKEN_SLASH
    | TOKEN_SQRT
    | TOKEN_LOG
    | TOKEN_MOD
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_SMA
    | TOKEN_ABS
    | TOKEN_STD
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_GT
    | TOKEN_GE
    | TOKEN_EQ
    | TOKEN_LT
    | TOKEN_LE
    | TOKEN_NE
    | TOKEN_PARSEREXCEPTION
    | TOKEN_LEXEREXCEPTION
    | TOKEN_TEXT
    | TOKEN_FLOAT
    | TOKEN_INT32
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Prog
    | NONTERM_CommaList
    | NONTERM_Expr
    | NONTERM_Term
    | NONTERM_Factor

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | COMMA  -> 1 
  | APOS  -> 2 
  | LPAREN  -> 3 
  | RPAREN  -> 4 
  | IF  -> 5 
  | AMP  -> 6 
  | PIPE  -> 7 
  | AND  -> 8 
  | OR  -> 9 
  | COUNT  -> 10 
  | FOR  -> 11 
  | INCR  -> 12 
  | VAR  -> 13 
  | OPEN  -> 14 
  | HIGH  -> 15 
  | LOW  -> 16 
  | CLOSE  -> 17 
  | VOLUME  -> 18 
  | SYMBOL  -> 19 
  | DATE  -> 20 
  | POW  -> 21 
  | ASTER  -> 22 
  | SLASH  -> 23 
  | SQRT  -> 24 
  | LOG  -> 25 
  | MOD  -> 26 
  | MAX  -> 27 
  | MIN  -> 28 
  | SMA  -> 29 
  | ABS  -> 30 
  | STD  -> 31 
  | PLUS  -> 32 
  | MINUS  -> 33 
  | GT  -> 34 
  | GE  -> 35 
  | EQ  -> 36 
  | LT  -> 37 
  | LE  -> 38 
  | NE  -> 39 
  | PARSEREXCEPTION _ -> 40 
  | LEXEREXCEPTION _ -> 41 
  | TEXT _ -> 42 
  | FLOAT _ -> 43 
  | INT32 _ -> 44 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_COMMA 
  | 2 -> TOKEN_APOS 
  | 3 -> TOKEN_LPAREN 
  | 4 -> TOKEN_RPAREN 
  | 5 -> TOKEN_IF 
  | 6 -> TOKEN_AMP 
  | 7 -> TOKEN_PIPE 
  | 8 -> TOKEN_AND 
  | 9 -> TOKEN_OR 
  | 10 -> TOKEN_COUNT 
  | 11 -> TOKEN_FOR 
  | 12 -> TOKEN_INCR 
  | 13 -> TOKEN_VAR 
  | 14 -> TOKEN_OPEN 
  | 15 -> TOKEN_HIGH 
  | 16 -> TOKEN_LOW 
  | 17 -> TOKEN_CLOSE 
  | 18 -> TOKEN_VOLUME 
  | 19 -> TOKEN_SYMBOL 
  | 20 -> TOKEN_DATE 
  | 21 -> TOKEN_POW 
  | 22 -> TOKEN_ASTER 
  | 23 -> TOKEN_SLASH 
  | 24 -> TOKEN_SQRT 
  | 25 -> TOKEN_LOG 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_MAX 
  | 28 -> TOKEN_MIN 
  | 29 -> TOKEN_SMA 
  | 30 -> TOKEN_ABS 
  | 31 -> TOKEN_STD 
  | 32 -> TOKEN_PLUS 
  | 33 -> TOKEN_MINUS 
  | 34 -> TOKEN_GT 
  | 35 -> TOKEN_GE 
  | 36 -> TOKEN_EQ 
  | 37 -> TOKEN_LT 
  | 38 -> TOKEN_LE 
  | 39 -> TOKEN_NE 
  | 40 -> TOKEN_PARSEREXCEPTION 
  | 41 -> TOKEN_LEXEREXCEPTION 
  | 42 -> TOKEN_TEXT 
  | 43 -> TOKEN_FLOAT 
  | 44 -> TOKEN_INT32 
  | 47 -> TOKEN_end_of_input
  | 45 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Prog 
    | 3 -> NONTERM_CommaList 
    | 4 -> NONTERM_CommaList 
    | 5 -> NONTERM_Expr 
    | 6 -> NONTERM_Expr 
    | 7 -> NONTERM_Expr 
    | 8 -> NONTERM_Expr 
    | 9 -> NONTERM_Expr 
    | 10 -> NONTERM_Expr 
    | 11 -> NONTERM_Expr 
    | 12 -> NONTERM_Expr 
    | 13 -> NONTERM_Expr 
    | 14 -> NONTERM_Expr 
    | 15 -> NONTERM_Expr 
    | 16 -> NONTERM_Expr 
    | 17 -> NONTERM_Expr 
    | 18 -> NONTERM_Expr 
    | 19 -> NONTERM_Expr 
    | 20 -> NONTERM_Term 
    | 21 -> NONTERM_Term 
    | 22 -> NONTERM_Term 
    | 23 -> NONTERM_Term 
    | 24 -> NONTERM_Term 
    | 25 -> NONTERM_Term 
    | 26 -> NONTERM_Term 
    | 27 -> NONTERM_Term 
    | 28 -> NONTERM_Term 
    | 29 -> NONTERM_Term 
    | 30 -> NONTERM_Term 
    | 31 -> NONTERM_Term 
    | 32 -> NONTERM_Term 
    | 33 -> NONTERM_Term 
    | 34 -> NONTERM_Term 
    | 35 -> NONTERM_Term 
    | 36 -> NONTERM_Term 
    | 37 -> NONTERM_Term 
    | 38 -> NONTERM_Term 
    | 39 -> NONTERM_Term 
    | 40 -> NONTERM_Term 
    | 41 -> NONTERM_Term 
    | 42 -> NONTERM_Factor 
    | 43 -> NONTERM_Factor 
    | 44 -> NONTERM_Factor 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 47 
let _fsyacc_tagOfErrorTerminal = 45

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | COMMA  -> "COMMA" 
  | APOS  -> "APOS" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | IF  -> "IF" 
  | AMP  -> "AMP" 
  | PIPE  -> "PIPE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | COUNT  -> "COUNT" 
  | FOR  -> "FOR" 
  | INCR  -> "INCR" 
  | VAR  -> "VAR" 
  | OPEN  -> "OPEN" 
  | HIGH  -> "HIGH" 
  | LOW  -> "LOW" 
  | CLOSE  -> "CLOSE" 
  | VOLUME  -> "VOLUME" 
  | SYMBOL  -> "SYMBOL" 
  | DATE  -> "DATE" 
  | POW  -> "POW" 
  | ASTER  -> "ASTER" 
  | SLASH  -> "SLASH" 
  | SQRT  -> "SQRT" 
  | LOG  -> "LOG" 
  | MOD  -> "MOD" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | SMA  -> "SMA" 
  | ABS  -> "ABS" 
  | STD  -> "STD" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | GT  -> "GT" 
  | GE  -> "GE" 
  | EQ  -> "EQ" 
  | LT  -> "LT" 
  | LE  -> "LE" 
  | NE  -> "NE" 
  | PARSEREXCEPTION _ -> "PARSEREXCEPTION" 
  | LEXEREXCEPTION _ -> "LEXEREXCEPTION" 
  | TEXT _ -> "TEXT" 
  | FLOAT _ -> "FLOAT" 
  | INT32 _ -> "INT32" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | APOS  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | COUNT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | INCR  -> (null : System.Object) 
  | VAR  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | HIGH  -> (null : System.Object) 
  | LOW  -> (null : System.Object) 
  | CLOSE  -> (null : System.Object) 
  | VOLUME  -> (null : System.Object) 
  | SYMBOL  -> (null : System.Object) 
  | DATE  -> (null : System.Object) 
  | POW  -> (null : System.Object) 
  | ASTER  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | SQRT  -> (null : System.Object) 
  | LOG  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | SMA  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | STD  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | PARSEREXCEPTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEXEREXCEPTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 0us; 65535us; 25us; 65535us; 0us; 3us; 41us; 5us; 42us; 6us; 43us; 7us; 44us; 8us; 45us; 9us; 46us; 10us; 47us; 11us; 48us; 12us; 69us; 13us; 70us; 14us; 73us; 15us; 74us; 16us; 77us; 17us; 80us; 18us; 85us; 19us; 88us; 20us; 89us; 21us; 90us; 22us; 95us; 23us; 100us; 24us; 105us; 25us; 112us; 26us; 115us; 27us; 126us; 28us; 31us; 65535us; 0us; 49us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 41us; 49us; 42us; 49us; 43us; 49us; 44us; 49us; 45us; 49us; 46us; 49us; 47us; 49us; 48us; 49us; 69us; 49us; 70us; 49us; 73us; 49us; 74us; 49us; 77us; 49us; 80us; 49us; 85us; 49us; 88us; 49us; 89us; 49us; 90us; 49us; 95us; 49us; 100us; 49us; 105us; 49us; 112us; 49us; 115us; 49us; 126us; 49us; 44us; 65535us; 0us; 123us; 29us; 123us; 31us; 123us; 33us; 123us; 35us; 123us; 37us; 123us; 39us; 123us; 41us; 123us; 42us; 123us; 43us; 123us; 44us; 123us; 45us; 123us; 46us; 123us; 47us; 123us; 48us; 123us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 69us; 123us; 70us; 123us; 73us; 123us; 74us; 123us; 77us; 123us; 80us; 123us; 85us; 123us; 88us; 123us; 89us; 123us; 90us; 123us; 93us; 94us; 95us; 123us; 98us; 99us; 100us; 123us; 103us; 104us; 105us; 123us; 110us; 111us; 112us; 123us; 115us; 123us; 126us; 123us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 6us; 32us; 64us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 15us; 2us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 1us; 2us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 29us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 29us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 30us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 30us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 31us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 31us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 32us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 33us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 33us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 33us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 34us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 35us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 36us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 37us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 38us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 44us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 44us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 22us; 24us; 40us; 56us; 72us; 88us; 104us; 120us; 136us; 152us; 168us; 184us; 200us; 216us; 232us; 248us; 264us; 280us; 296us; 312us; 328us; 344us; 360us; 376us; 392us; 408us; 410us; 412us; 414us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 436us; 438us; 440us; 442us; 444us; 446us; 448us; 450us; 452us; 454us; 456us; 458us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; |]
let _fsyacc_action_rows = 128
let _fsyacc_actionTableElements = [|24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 49152us; 0us; 16385us; 15us; 32768us; 0us; 4us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 0us; 16386us; 8us; 16395us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 8us; 16396us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 8us; 16397us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 8us; 16398us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 8us; 16399us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 8us; 16400us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 14us; 16401us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 14us; 16402us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 1us; 70us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 71us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 1us; 74us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 75us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 1us; 78us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 81us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 86us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 1us; 89us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 1us; 90us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 91us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 96us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 101us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 106us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 113us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 116us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 15us; 32768us; 4us; 127us; 6us; 47us; 7us; 48us; 21us; 33us; 22us; 35us; 23us; 37us; 26us; 39us; 32us; 29us; 33us; 31us; 34us; 42us; 35us; 43us; 36us; 41us; 37us; 44us; 38us; 45us; 39us; 46us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16389us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16390us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16391us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16392us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16393us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16394us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16403us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16404us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16405us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16406us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16407us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16408us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16409us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16410us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16411us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 0us; 16412us; 1us; 32768us; 3us; 69us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16413us; 1us; 32768us; 3us; 73us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16414us; 1us; 32768us; 3us; 77us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 1us; 32768us; 42us; 79us; 1us; 32768us; 1us; 80us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16415us; 1us; 32768us; 3us; 83us; 1us; 32768us; 42us; 84us; 1us; 32768us; 1us; 85us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16416us; 1us; 32768us; 3us; 88us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16417us; 1us; 32768us; 3us; 93us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 1us; 32768us; 1us; 95us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16418us; 1us; 32768us; 3us; 98us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 1us; 32768us; 1us; 100us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16419us; 1us; 32768us; 3us; 103us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 1us; 32768us; 1us; 105us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16420us; 1us; 32768us; 3us; 108us; 1us; 32768us; 42us; 109us; 1us; 32768us; 1us; 110us; 3us; 32768us; 3us; 126us; 43us; 124us; 44us; 125us; 1us; 32768us; 1us; 112us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16421us; 1us; 32768us; 3us; 115us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16422us; 1us; 32768us; 42us; 118us; 0us; 16423us; 1us; 32768us; 3us; 120us; 1us; 32768us; 42us; 121us; 1us; 32768us; 4us; 122us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 24us; 32768us; 3us; 126us; 5us; 87us; 8us; 92us; 9us; 97us; 10us; 107us; 11us; 102us; 12us; 117us; 13us; 119us; 14us; 54us; 15us; 56us; 16us; 58us; 17us; 60us; 18us; 62us; 19us; 64us; 20us; 66us; 24us; 50us; 25us; 52us; 27us; 72us; 28us; 68us; 29us; 76us; 30us; 114us; 31us; 82us; 43us; 124us; 44us; 125us; 0us; 16428us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 25us; 26us; 27us; 43us; 44us; 53us; 62us; 71us; 80us; 89us; 98us; 113us; 128us; 144us; 160us; 176us; 192us; 208us; 224us; 240us; 256us; 272us; 288us; 304us; 320us; 336us; 352us; 368us; 384us; 409us; 410us; 435us; 436us; 461us; 462us; 487us; 488us; 513us; 514us; 539us; 540us; 565us; 590us; 615us; 640us; 665us; 690us; 715us; 740us; 741us; 745us; 746us; 750us; 751us; 755us; 756us; 760us; 761us; 765us; 766us; 770us; 771us; 775us; 776us; 780us; 781us; 785us; 786us; 788us; 813us; 838us; 839us; 841us; 866us; 891us; 892us; 894us; 919us; 921us; 923us; 948us; 949us; 951us; 953us; 955us; 980us; 981us; 983us; 1008us; 1033us; 1058us; 1059us; 1061us; 1065us; 1067us; 1092us; 1093us; 1095us; 1099us; 1101us; 1126us; 1127us; 1129us; 1133us; 1135us; 1160us; 1161us; 1163us; 1165us; 1167us; 1171us; 1173us; 1198us; 1199us; 1201us; 1226us; 1227us; 1229us; 1230us; 1232us; 1234us; 1236us; 1237us; 1238us; 1239us; 1240us; 1265us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 6us; 6us; 8us; 6us; 8us; 6us; 6us; 6us; 8us; 4us; 2us; 4us; 1us; 1us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16389us; 65535us; 16390us; 65535us; 16391us; 65535us; 16392us; 65535us; 16393us; 65535us; 16394us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16403us; 65535us; 16404us; 65535us; 16405us; 65535us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 16424us; 16425us; 16426us; 16427us; 65535us; 16428us; |]
let _fsyacc_reductions ()  =    [| 
# 381 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Equation )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 390 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Parser.fsy"
                                   Equation(_1) 
                   )
# 42 "Parser.fsy"
                 :  Ast.Equation ));
# 401 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Parser.fsy"
                                          _1 
                   )
# 45 "Parser.fsy"
                 : 'Prog));
# 412 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                     [_1]
                   )
# 48 "Parser.fsy"
                 : 'CommaList));
# 423 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                   _3 :: _1 
                   )
# 49 "Parser.fsy"
                 : 'CommaList));
# 435 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                            Plus(_1, _3)  
                   )
# 52 "Parser.fsy"
                 : 'Expr));
# 447 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                               Minus(_1, _3) 
                   )
# 53 "Parser.fsy"
                 : 'Expr));
# 459 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                           Pow(_1, _3)   
                   )
# 54 "Parser.fsy"
                 : 'Expr));
# 471 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                            Times(_1, _3) 
                   )
# 55 "Parser.fsy"
                 : 'Expr));
# 483 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                            Divide(_1, _3) 
                   )
# 56 "Parser.fsy"
                 : 'Expr));
# 495 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                           Modulus(_1, _3)
                   )
# 57 "Parser.fsy"
                 : 'Expr));
# 507 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                          Eq(_1, _3)    
                   )
# 58 "Parser.fsy"
                 : 'Expr));
# 519 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                          Gt(_1, _3)    
                   )
# 59 "Parser.fsy"
                 : 'Expr));
# 531 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                          Ge(_1, _3)    
                   )
# 60 "Parser.fsy"
                 : 'Expr));
# 543 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                          Lt(_1, _3)    
                   )
# 61 "Parser.fsy"
                 : 'Expr));
# 555 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                          Le(_1, _3)    
                   )
# 62 "Parser.fsy"
                 : 'Expr));
# 567 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                          Ne(_1, _3)    
                   )
# 63 "Parser.fsy"
                 : 'Expr));
# 579 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                           Amp(_1, _3)   
                   )
# 64 "Parser.fsy"
                 : 'Expr));
# 591 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                           Pipe(_1, _3)    
                   )
# 65 "Parser.fsy"
                 : 'Expr));
# 603 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                    Term(_1)      
                   )
# 66 "Parser.fsy"
                 : 'Expr));
# 614 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                         Sqrt(_2)       
                   )
# 69 "Parser.fsy"
                 : 'Term));
# 625 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                        Log(_2)        
                   )
# 70 "Parser.fsy"
                 : 'Term));
# 636 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                         O(_2)          
                   )
# 71 "Parser.fsy"
                 : 'Term));
# 647 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                         H(_2)          
                   )
# 72 "Parser.fsy"
                 : 'Term));
# 658 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                        L(_2)          
                   )
# 73 "Parser.fsy"
                 : 'Term));
# 669 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                          C(_2)          
                   )
# 74 "Parser.fsy"
                 : 'Term));
# 680 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                           V(_2)          
                   )
# 75 "Parser.fsy"
                 : 'Term));
# 691 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                                           S(_2)          
                   )
# 76 "Parser.fsy"
                 : 'Term));
# 702 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                         D(_2)          
                   )
# 77 "Parser.fsy"
                 : 'Term));
# 713 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                                   Min(_3, _5)    
                   )
# 78 "Parser.fsy"
                 : 'Term));
# 725 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                                   Max(_3, _5)    
                   )
# 79 "Parser.fsy"
                 : 'Term));
# 737 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                                               Sma(_3, _5, _7)    
                   )
# 80 "Parser.fsy"
                 : 'Term));
# 750 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                                    Std(_3, _5)    
                   )
# 81 "Parser.fsy"
                 : 'Term));
# 762 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                                             If(_3, _5, _7)    
                   )
# 82 "Parser.fsy"
                 : 'Term));
# 775 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                                     And(_3, _5)    
                   )
# 83 "Parser.fsy"
                 : 'Term));
# 787 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                                     Or(_3, _5)    
                   )
# 84 "Parser.fsy"
                 : 'Term));
# 799 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                                     For(_3, _5)    
                   )
# 85 "Parser.fsy"
                 : 'Term));
# 811 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                                                  Count(_3, _5, _7)    
                   )
# 86 "Parser.fsy"
                 : 'Term));
# 824 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                 Abs(_3)        
                   )
# 87 "Parser.fsy"
                 : 'Term));
# 835 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                        Incr(_2)    
                   )
# 88 "Parser.fsy"
                 : 'Term));
# 846 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                 Var(_3)    
                   )
# 89 "Parser.fsy"
                 : 'Term));
# 857 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                     Factor(_1)     
                   )
# 90 "Parser.fsy"
                 : 'Term));
# 868 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                        Float(_1)      
                   )
# 93 "Parser.fsy"
                 : 'Factor));
# 879 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                        Integer(_1)    
                   )
# 94 "Parser.fsy"
                 : 'Factor));
# 890 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                              ParenEx(_2)    
                   )
# 95 "Parser.fsy"
                 : 'Factor));
|]
# 902 "obj\x86\Release\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 48;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  Ast.Equation  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
