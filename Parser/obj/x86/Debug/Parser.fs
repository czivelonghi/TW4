// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open Ast


# 12 "obj\x86\Debug\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | COMMA
  | APOS
  | LPAREN
  | RPAREN
  | IF
  | AMP
  | PIPE
  | AND
  | OR
  | COUNT
  | FOR
  | INCR
  | VAR
  | OPEN
  | HIGH
  | LOW
  | CLOSE
  | VOLUME
  | SYMBOL
  | DATE
  | POW
  | ASTER
  | SLASH
  | SQRT
  | LOG
  | MOD
  | MAX
  | MIN
  | SMA
  | ABS
  | STD
  | SLOPE
  | CANDLE
  | PAT1
  | PAT2
  | PAT3
  | EQUALS
  | PLUS
  | MINUS
  | GT
  | GE
  | EQ
  | LT
  | LE
  | NE
  | PARSEREXCEPTION of (string)
  | LEXEREXCEPTION of (string)
  | TEXT of (string)
  | FLOAT of (System.Double)
  | INT32 of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_COMMA
    | TOKEN_APOS
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_IF
    | TOKEN_AMP
    | TOKEN_PIPE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_COUNT
    | TOKEN_FOR
    | TOKEN_INCR
    | TOKEN_VAR
    | TOKEN_OPEN
    | TOKEN_HIGH
    | TOKEN_LOW
    | TOKEN_CLOSE
    | TOKEN_VOLUME
    | TOKEN_SYMBOL
    | TOKEN_DATE
    | TOKEN_POW
    | TOKEN_ASTER
    | TOKEN_SLASH
    | TOKEN_SQRT
    | TOKEN_LOG
    | TOKEN_MOD
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_SMA
    | TOKEN_ABS
    | TOKEN_STD
    | TOKEN_SLOPE
    | TOKEN_CANDLE
    | TOKEN_PAT1
    | TOKEN_PAT2
    | TOKEN_PAT3
    | TOKEN_EQUALS
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_GT
    | TOKEN_GE
    | TOKEN_EQ
    | TOKEN_LT
    | TOKEN_LE
    | TOKEN_NE
    | TOKEN_PARSEREXCEPTION
    | TOKEN_LEXEREXCEPTION
    | TOKEN_TEXT
    | TOKEN_FLOAT
    | TOKEN_INT32
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Prog
    | NONTERM_CommaList
    | NONTERM_Expr
    | NONTERM_Term
    | NONTERM_Factor

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | COMMA  -> 1 
  | APOS  -> 2 
  | LPAREN  -> 3 
  | RPAREN  -> 4 
  | IF  -> 5 
  | AMP  -> 6 
  | PIPE  -> 7 
  | AND  -> 8 
  | OR  -> 9 
  | COUNT  -> 10 
  | FOR  -> 11 
  | INCR  -> 12 
  | VAR  -> 13 
  | OPEN  -> 14 
  | HIGH  -> 15 
  | LOW  -> 16 
  | CLOSE  -> 17 
  | VOLUME  -> 18 
  | SYMBOL  -> 19 
  | DATE  -> 20 
  | POW  -> 21 
  | ASTER  -> 22 
  | SLASH  -> 23 
  | SQRT  -> 24 
  | LOG  -> 25 
  | MOD  -> 26 
  | MAX  -> 27 
  | MIN  -> 28 
  | SMA  -> 29 
  | ABS  -> 30 
  | STD  -> 31 
  | SLOPE  -> 32 
  | CANDLE  -> 33 
  | PAT1  -> 34 
  | PAT2  -> 35 
  | PAT3  -> 36 
  | EQUALS  -> 37 
  | PLUS  -> 38 
  | MINUS  -> 39 
  | GT  -> 40 
  | GE  -> 41 
  | EQ  -> 42 
  | LT  -> 43 
  | LE  -> 44 
  | NE  -> 45 
  | PARSEREXCEPTION _ -> 46 
  | LEXEREXCEPTION _ -> 47 
  | TEXT _ -> 48 
  | FLOAT _ -> 49 
  | INT32 _ -> 50 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_COMMA 
  | 2 -> TOKEN_APOS 
  | 3 -> TOKEN_LPAREN 
  | 4 -> TOKEN_RPAREN 
  | 5 -> TOKEN_IF 
  | 6 -> TOKEN_AMP 
  | 7 -> TOKEN_PIPE 
  | 8 -> TOKEN_AND 
  | 9 -> TOKEN_OR 
  | 10 -> TOKEN_COUNT 
  | 11 -> TOKEN_FOR 
  | 12 -> TOKEN_INCR 
  | 13 -> TOKEN_VAR 
  | 14 -> TOKEN_OPEN 
  | 15 -> TOKEN_HIGH 
  | 16 -> TOKEN_LOW 
  | 17 -> TOKEN_CLOSE 
  | 18 -> TOKEN_VOLUME 
  | 19 -> TOKEN_SYMBOL 
  | 20 -> TOKEN_DATE 
  | 21 -> TOKEN_POW 
  | 22 -> TOKEN_ASTER 
  | 23 -> TOKEN_SLASH 
  | 24 -> TOKEN_SQRT 
  | 25 -> TOKEN_LOG 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_MAX 
  | 28 -> TOKEN_MIN 
  | 29 -> TOKEN_SMA 
  | 30 -> TOKEN_ABS 
  | 31 -> TOKEN_STD 
  | 32 -> TOKEN_SLOPE 
  | 33 -> TOKEN_CANDLE 
  | 34 -> TOKEN_PAT1 
  | 35 -> TOKEN_PAT2 
  | 36 -> TOKEN_PAT3 
  | 37 -> TOKEN_EQUALS 
  | 38 -> TOKEN_PLUS 
  | 39 -> TOKEN_MINUS 
  | 40 -> TOKEN_GT 
  | 41 -> TOKEN_GE 
  | 42 -> TOKEN_EQ 
  | 43 -> TOKEN_LT 
  | 44 -> TOKEN_LE 
  | 45 -> TOKEN_NE 
  | 46 -> TOKEN_PARSEREXCEPTION 
  | 47 -> TOKEN_LEXEREXCEPTION 
  | 48 -> TOKEN_TEXT 
  | 49 -> TOKEN_FLOAT 
  | 50 -> TOKEN_INT32 
  | 53 -> TOKEN_end_of_input
  | 51 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Prog 
    | 3 -> NONTERM_CommaList 
    | 4 -> NONTERM_CommaList 
    | 5 -> NONTERM_Expr 
    | 6 -> NONTERM_Expr 
    | 7 -> NONTERM_Expr 
    | 8 -> NONTERM_Expr 
    | 9 -> NONTERM_Expr 
    | 10 -> NONTERM_Expr 
    | 11 -> NONTERM_Expr 
    | 12 -> NONTERM_Expr 
    | 13 -> NONTERM_Expr 
    | 14 -> NONTERM_Expr 
    | 15 -> NONTERM_Expr 
    | 16 -> NONTERM_Expr 
    | 17 -> NONTERM_Expr 
    | 18 -> NONTERM_Expr 
    | 19 -> NONTERM_Expr 
    | 20 -> NONTERM_Term 
    | 21 -> NONTERM_Term 
    | 22 -> NONTERM_Term 
    | 23 -> NONTERM_Term 
    | 24 -> NONTERM_Term 
    | 25 -> NONTERM_Term 
    | 26 -> NONTERM_Term 
    | 27 -> NONTERM_Term 
    | 28 -> NONTERM_Term 
    | 29 -> NONTERM_Term 
    | 30 -> NONTERM_Term 
    | 31 -> NONTERM_Term 
    | 32 -> NONTERM_Term 
    | 33 -> NONTERM_Term 
    | 34 -> NONTERM_Term 
    | 35 -> NONTERM_Term 
    | 36 -> NONTERM_Term 
    | 37 -> NONTERM_Term 
    | 38 -> NONTERM_Term 
    | 39 -> NONTERM_Term 
    | 40 -> NONTERM_Term 
    | 41 -> NONTERM_Term 
    | 42 -> NONTERM_Term 
    | 43 -> NONTERM_Term 
    | 44 -> NONTERM_Term 
    | 45 -> NONTERM_Term 
    | 46 -> NONTERM_Term 
    | 47 -> NONTERM_Term 
    | 48 -> NONTERM_Factor 
    | 49 -> NONTERM_Factor 
    | 50 -> NONTERM_Factor 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 53 
let _fsyacc_tagOfErrorTerminal = 51

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | COMMA  -> "COMMA" 
  | APOS  -> "APOS" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | IF  -> "IF" 
  | AMP  -> "AMP" 
  | PIPE  -> "PIPE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | COUNT  -> "COUNT" 
  | FOR  -> "FOR" 
  | INCR  -> "INCR" 
  | VAR  -> "VAR" 
  | OPEN  -> "OPEN" 
  | HIGH  -> "HIGH" 
  | LOW  -> "LOW" 
  | CLOSE  -> "CLOSE" 
  | VOLUME  -> "VOLUME" 
  | SYMBOL  -> "SYMBOL" 
  | DATE  -> "DATE" 
  | POW  -> "POW" 
  | ASTER  -> "ASTER" 
  | SLASH  -> "SLASH" 
  | SQRT  -> "SQRT" 
  | LOG  -> "LOG" 
  | MOD  -> "MOD" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | SMA  -> "SMA" 
  | ABS  -> "ABS" 
  | STD  -> "STD" 
  | SLOPE  -> "SLOPE" 
  | CANDLE  -> "CANDLE" 
  | PAT1  -> "PAT1" 
  | PAT2  -> "PAT2" 
  | PAT3  -> "PAT3" 
  | EQUALS  -> "EQUALS" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | GT  -> "GT" 
  | GE  -> "GE" 
  | EQ  -> "EQ" 
  | LT  -> "LT" 
  | LE  -> "LE" 
  | NE  -> "NE" 
  | PARSEREXCEPTION _ -> "PARSEREXCEPTION" 
  | LEXEREXCEPTION _ -> "LEXEREXCEPTION" 
  | TEXT _ -> "TEXT" 
  | FLOAT _ -> "FLOAT" 
  | INT32 _ -> "INT32" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | APOS  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | COUNT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | INCR  -> (null : System.Object) 
  | VAR  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | HIGH  -> (null : System.Object) 
  | LOW  -> (null : System.Object) 
  | CLOSE  -> (null : System.Object) 
  | VOLUME  -> (null : System.Object) 
  | SYMBOL  -> (null : System.Object) 
  | DATE  -> (null : System.Object) 
  | POW  -> (null : System.Object) 
  | ASTER  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | SQRT  -> (null : System.Object) 
  | LOG  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | SMA  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | STD  -> (null : System.Object) 
  | SLOPE  -> (null : System.Object) 
  | CANDLE  -> (null : System.Object) 
  | PAT1  -> (null : System.Object) 
  | PAT2  -> (null : System.Object) 
  | PAT3  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | PARSEREXCEPTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEXEREXCEPTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 0us; 65535us; 34us; 65535us; 0us; 3us; 50us; 5us; 51us; 6us; 52us; 7us; 53us; 8us; 54us; 9us; 55us; 10us; 56us; 11us; 57us; 12us; 78us; 13us; 79us; 14us; 82us; 15us; 83us; 16us; 86us; 17us; 89us; 18us; 94us; 19us; 99us; 20us; 100us; 21us; 105us; 22us; 110us; 23us; 115us; 24us; 116us; 25us; 121us; 26us; 122us; 27us; 123us; 28us; 126us; 29us; 127us; 30us; 128us; 31us; 133us; 32us; 138us; 33us; 143us; 34us; 150us; 35us; 153us; 36us; 170us; 37us; 40us; 65535us; 0us; 58us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 58us; 51us; 58us; 52us; 58us; 53us; 58us; 54us; 58us; 55us; 58us; 56us; 58us; 57us; 58us; 78us; 58us; 79us; 58us; 82us; 58us; 83us; 58us; 86us; 58us; 89us; 58us; 94us; 58us; 99us; 58us; 100us; 58us; 105us; 58us; 110us; 58us; 115us; 58us; 116us; 58us; 121us; 58us; 122us; 58us; 123us; 58us; 126us; 58us; 127us; 58us; 128us; 58us; 133us; 58us; 138us; 58us; 143us; 58us; 150us; 58us; 153us; 58us; 170us; 58us; 53us; 65535us; 0us; 167us; 38us; 167us; 40us; 167us; 42us; 167us; 44us; 167us; 46us; 167us; 48us; 167us; 50us; 167us; 51us; 167us; 52us; 167us; 53us; 167us; 54us; 167us; 55us; 167us; 56us; 167us; 57us; 167us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 78us; 167us; 79us; 167us; 82us; 167us; 83us; 167us; 86us; 167us; 89us; 167us; 94us; 167us; 99us; 167us; 100us; 167us; 105us; 167us; 110us; 167us; 115us; 167us; 116us; 167us; 121us; 167us; 122us; 167us; 123us; 167us; 126us; 167us; 127us; 167us; 128us; 167us; 131us; 132us; 133us; 167us; 136us; 137us; 138us; 167us; 141us; 142us; 143us; 167us; 148us; 149us; 150us; 167us; 153us; 167us; 170us; 167us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 6us; 41us; 82us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 15us; 2us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 1us; 2us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 14us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 15us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 17us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 18us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 29us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 29us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 30us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 30us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 31us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 31us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 32us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 33us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 33us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 34us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 35us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 36us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 36us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 37us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 37us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 37us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 38us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 38us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 38us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 39us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 40us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 41us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 42us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 43us; 15us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 50us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 50us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 22us; 24us; 40us; 56us; 72us; 88us; 104us; 120us; 136us; 152us; 168us; 184us; 200us; 216us; 232us; 248us; 264us; 280us; 296us; 312us; 328us; 344us; 360us; 376us; 392us; 408us; 424us; 440us; 456us; 472us; 488us; 504us; 520us; 536us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 614us; 616us; 618us; 620us; 622us; 624us; 626us; 628us; 630us; 632us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 652us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 668us; 670us; 672us; 674us; 676us; 678us; 680us; 682us; 684us; 686us; 688us; 690us; 692us; 694us; 696us; 698us; 700us; 702us; 704us; 706us; 708us; 710us; 712us; 714us; 716us; 718us; 720us; 722us; 724us; 726us; 728us; 730us; 732us; 734us; 736us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 752us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; |]
let _fsyacc_action_rows = 172
let _fsyacc_actionTableElements = [|30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 49152us; 0us; 16385us; 15us; 32768us; 0us; 4us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 0us; 16386us; 8us; 16395us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 8us; 16396us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 8us; 16397us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 8us; 16398us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 8us; 16399us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 8us; 16400us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 14us; 16401us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 14us; 16402us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 79us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 80us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 83us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 84us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 87us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 90us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 95us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 100us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 101us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 106us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 111us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 116us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 117us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 122us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 123us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 124us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 127us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 1us; 128us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 129us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 134us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 139us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 144us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 151us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 154us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 15us; 32768us; 4us; 171us; 6us; 56us; 7us; 57us; 21us; 42us; 22us; 44us; 23us; 46us; 26us; 48us; 38us; 38us; 39us; 40us; 40us; 51us; 41us; 52us; 42us; 50us; 43us; 53us; 44us; 54us; 45us; 55us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16389us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16390us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16391us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16392us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16393us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16394us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16403us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16404us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16405us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16406us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16407us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16408us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16409us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16410us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16411us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 0us; 16412us; 1us; 32768us; 3us; 78us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16413us; 1us; 32768us; 3us; 82us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16414us; 1us; 32768us; 3us; 86us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 1us; 32768us; 48us; 88us; 1us; 32768us; 1us; 89us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16415us; 1us; 32768us; 3us; 92us; 1us; 32768us; 48us; 93us; 1us; 32768us; 1us; 94us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16416us; 1us; 32768us; 3us; 97us; 1us; 32768us; 48us; 98us; 1us; 32768us; 1us; 99us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16417us; 1us; 32768us; 3us; 103us; 1us; 32768us; 48us; 104us; 1us; 32768us; 1us; 105us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16418us; 1us; 32768us; 3us; 108us; 1us; 32768us; 48us; 109us; 1us; 32768us; 1us; 110us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16419us; 1us; 32768us; 3us; 113us; 1us; 32768us; 48us; 114us; 1us; 32768us; 1us; 115us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16420us; 1us; 32768us; 3us; 119us; 1us; 32768us; 48us; 120us; 1us; 32768us; 1us; 121us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16421us; 1us; 32768us; 3us; 126us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16422us; 1us; 32768us; 3us; 131us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 1us; 32768us; 1us; 133us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16423us; 1us; 32768us; 3us; 136us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 1us; 32768us; 1us; 138us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16424us; 1us; 32768us; 3us; 141us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 1us; 32768us; 1us; 143us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16425us; 1us; 32768us; 3us; 146us; 1us; 32768us; 48us; 147us; 1us; 32768us; 1us; 148us; 3us; 32768us; 3us; 170us; 49us; 168us; 50us; 169us; 1us; 32768us; 1us; 150us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16426us; 1us; 32768us; 3us; 153us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16427us; 1us; 32768us; 48us; 156us; 0us; 16428us; 1us; 32768us; 3us; 158us; 1us; 32768us; 48us; 159us; 1us; 32768us; 4us; 160us; 0us; 16429us; 1us; 32768us; 3us; 162us; 1us; 32768us; 48us; 163us; 1us; 32768us; 1us; 164us; 1us; 32768us; 48us; 165us; 1us; 32768us; 4us; 166us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 30us; 32768us; 3us; 170us; 5us; 125us; 8us; 130us; 9us; 135us; 10us; 145us; 11us; 140us; 12us; 155us; 13us; 157us; 14us; 63us; 15us; 65us; 16us; 67us; 17us; 69us; 18us; 71us; 19us; 73us; 20us; 75us; 24us; 59us; 25us; 61us; 27us; 81us; 28us; 77us; 29us; 85us; 30us; 152us; 31us; 91us; 32us; 96us; 33us; 102us; 34us; 107us; 35us; 112us; 36us; 118us; 37us; 161us; 49us; 168us; 50us; 169us; 0us; 16434us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 31us; 32us; 33us; 49us; 50us; 59us; 68us; 77us; 86us; 95us; 104us; 119us; 134us; 150us; 166us; 182us; 198us; 214us; 230us; 246us; 262us; 278us; 294us; 310us; 326us; 342us; 358us; 374us; 390us; 406us; 422us; 438us; 454us; 470us; 486us; 502us; 518us; 534us; 565us; 566us; 597us; 598us; 629us; 630us; 661us; 662us; 693us; 694us; 725us; 726us; 757us; 788us; 819us; 850us; 881us; 912us; 943us; 974us; 975us; 979us; 980us; 984us; 985us; 989us; 990us; 994us; 995us; 999us; 1000us; 1004us; 1005us; 1009us; 1010us; 1014us; 1015us; 1019us; 1020us; 1022us; 1053us; 1084us; 1085us; 1087us; 1118us; 1149us; 1150us; 1152us; 1183us; 1185us; 1187us; 1218us; 1219us; 1221us; 1223us; 1225us; 1256us; 1257us; 1259us; 1261us; 1263us; 1294us; 1325us; 1326us; 1328us; 1330us; 1332us; 1363us; 1364us; 1366us; 1368us; 1370us; 1401us; 1402us; 1404us; 1406us; 1408us; 1439us; 1470us; 1471us; 1473us; 1475us; 1477us; 1508us; 1539us; 1570us; 1571us; 1573us; 1604us; 1635us; 1666us; 1667us; 1669us; 1673us; 1675us; 1706us; 1707us; 1709us; 1713us; 1715us; 1746us; 1747us; 1749us; 1753us; 1755us; 1786us; 1787us; 1789us; 1791us; 1793us; 1797us; 1799us; 1830us; 1831us; 1833us; 1864us; 1865us; 1867us; 1868us; 1870us; 1872us; 1874us; 1875us; 1877us; 1879us; 1881us; 1883us; 1885us; 1886us; 1887us; 1888us; 1889us; 1920us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 6us; 6us; 8us; 6us; 8us; 6us; 6us; 8us; 10us; 8us; 6us; 6us; 6us; 8us; 4us; 2us; 4us; 6us; 1us; 1us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16389us; 65535us; 16390us; 65535us; 16391us; 65535us; 16392us; 65535us; 16393us; 65535us; 16394us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16403us; 65535us; 16404us; 65535us; 16405us; 65535us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 16427us; 65535us; 16428us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 16431us; 16432us; 16433us; 65535us; 16434us; |]
let _fsyacc_reductions ()  =    [| 
# 423 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Ast.Equation )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 432 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Parser.fsy"
                                   Equation(_1) 
                   )
# 42 "Parser.fsy"
                 :  Ast.Equation ));
# 443 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Parser.fsy"
                                          _1 
                   )
# 45 "Parser.fsy"
                 : 'Prog));
# 454 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                     [_1]
                   )
# 48 "Parser.fsy"
                 : 'CommaList));
# 465 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                   _3 :: _1 
                   )
# 49 "Parser.fsy"
                 : 'CommaList));
# 477 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                            Plus(_1, _3)  
                   )
# 52 "Parser.fsy"
                 : 'Expr));
# 489 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                               Minus(_1, _3) 
                   )
# 53 "Parser.fsy"
                 : 'Expr));
# 501 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                           Pow(_1, _3)   
                   )
# 54 "Parser.fsy"
                 : 'Expr));
# 513 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                            Times(_1, _3) 
                   )
# 55 "Parser.fsy"
                 : 'Expr));
# 525 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                            Divide(_1, _3) 
                   )
# 56 "Parser.fsy"
                 : 'Expr));
# 537 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                           Modulus(_1, _3)
                   )
# 57 "Parser.fsy"
                 : 'Expr));
# 549 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                          Eq(_1, _3)    
                   )
# 58 "Parser.fsy"
                 : 'Expr));
# 561 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                          Gt(_1, _3)    
                   )
# 59 "Parser.fsy"
                 : 'Expr));
# 573 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                          Ge(_1, _3)    
                   )
# 60 "Parser.fsy"
                 : 'Expr));
# 585 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                          Lt(_1, _3)    
                   )
# 61 "Parser.fsy"
                 : 'Expr));
# 597 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                          Le(_1, _3)    
                   )
# 62 "Parser.fsy"
                 : 'Expr));
# 609 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                          Ne(_1, _3)    
                   )
# 63 "Parser.fsy"
                 : 'Expr));
# 621 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                           Amp(_1, _3)   
                   )
# 64 "Parser.fsy"
                 : 'Expr));
# 633 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                           Pipe(_1, _3)    
                   )
# 65 "Parser.fsy"
                 : 'Expr));
# 645 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                    Term(_1)      
                   )
# 66 "Parser.fsy"
                 : 'Expr));
# 656 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                 Sqrt(_2)       
                   )
# 69 "Parser.fsy"
                 : 'Term));
# 667 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                Log(_2)        
                   )
# 70 "Parser.fsy"
                 : 'Term));
# 678 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                 O(_2)          
                   )
# 71 "Parser.fsy"
                 : 'Term));
# 689 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                                 H(_2)          
                   )
# 72 "Parser.fsy"
                 : 'Term));
# 700 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                                L(_2)          
                   )
# 73 "Parser.fsy"
                 : 'Term));
# 711 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                  C(_2)          
                   )
# 74 "Parser.fsy"
                 : 'Term));
# 722 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                   V(_2)          
                   )
# 75 "Parser.fsy"
                 : 'Term));
# 733 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                                                   S(_2)          
                   )
# 76 "Parser.fsy"
                 : 'Term));
# 744 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                 D(_2)          
                   )
# 77 "Parser.fsy"
                 : 'Term));
# 755 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                                  Min(_3, _5)    
                   )
# 78 "Parser.fsy"
                 : 'Term));
# 767 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                                  Max(_3, _5)    
                   )
# 79 "Parser.fsy"
                 : 'Term));
# 779 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                                           Sma(_3, _5, _7)    
                   )
# 80 "Parser.fsy"
                 : 'Term));
# 792 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                                  Std(_3, _5)    
                   )
# 81 "Parser.fsy"
                 : 'Term));
# 804 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                                            Slope(_3, _5,_7)    
                   )
# 82 "Parser.fsy"
                 : 'Term));
# 817 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                                     Candle(_3, _5)    
                   )
# 83 "Parser.fsy"
                 : 'Term));
# 829 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                                   Pat1(_3, _5)    
                   )
# 84 "Parser.fsy"
                 : 'Term));
# 841 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                                           Pat2(_3, _5, _7)    
                   )
# 85 "Parser.fsy"
                 : 'Term));
# 854 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                                                    Pat3(_3, _5, _7, _9)    
                   )
# 86 "Parser.fsy"
                 : 'Term));
# 868 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                                         If(_3, _5, _7)    
                   )
# 87 "Parser.fsy"
                 : 'Term));
# 881 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                                   And(_3, _5)    
                   )
# 88 "Parser.fsy"
                 : 'Term));
# 893 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                                  Or(_3, _5)    
                   )
# 89 "Parser.fsy"
                 : 'Term));
# 905 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                                   For(_3, _5)    
                   )
# 90 "Parser.fsy"
                 : 'Term));
# 917 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                                             Count(_3, _5, _7)    
                   )
# 91 "Parser.fsy"
                 : 'Term));
# 930 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                         Abs(_3)        
                   )
# 92 "Parser.fsy"
                 : 'Term));
# 941 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                Incr(_2)    
                   )
# 93 "Parser.fsy"
                 : 'Term));
# 952 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                                         Var(_3)    
                   )
# 94 "Parser.fsy"
                 : 'Term));
# 963 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                                    Equals(_3,_5)    
                   )
# 95 "Parser.fsy"
                 : 'Term));
# 975 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                             Factor(_1)     
                   )
# 96 "Parser.fsy"
                 : 'Term));
# 986 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                        Float(_1)      
                   )
# 99 "Parser.fsy"
                 : 'Factor));
# 997 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                        Integer(_1)    
                   )
# 100 "Parser.fsy"
                 : 'Factor));
# 1008 "obj\x86\Debug\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                              ParenEx(_2)    
                   )
# 101 "Parser.fsy"
                 : 'Factor));
|]
# 1020 "obj\x86\Debug\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 54;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  Ast.Equation  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
